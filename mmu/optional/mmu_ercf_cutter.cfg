[mmu_servo cut_servo]         #`mmu_servo` only for the Happy Hare firmware, otherwise only `servo`
pin: PA9             #Extra Pin on the ERCF easy Board
maximum_servo_angle: 180      #Set this to 60 for a 60Â° Servo
minimum_pulse_width: 0.0005   #Adapt these for your servo
maximum_pulse_width: 0.0025  #Adapt these for your servo
initial_angle: 15
#mmu_servo_duration: 0.4

[gcode_macro _CUT_VAR]
description: Empty macro to store the variables

### Servo ###
variable_servo_closed_angle: 100          #Adapt these for your setup
variable_servo_open_angle: 15            #Adapt these for your setup
variable_servo_blocked_angle: 40         #I have the idea to home the filament against the cutter by blocking the filament path with 1/2 of the servo rotation. Could make cuts more precise
variable_servo_idle_time: 1000           #Time to let the servo reach it's position, in milliseconds (1 second = 1000 milliseconds)

### Feed lengths
variable_feed_length: 48
variable_cut_length: 10                  #How much you want to cut off in mm
variable_cut_amount: 1

gcode:


#[gcode_macro CUTTER_CLOSE]
#description: Set Servo in the close position
#gcode:
#     {% set cutvar = printer["gcode_macro _CUT_VAR"] %}
#     SET_SERVO SERVO=cut_servo ANGLE={cutvar.servo_closed_angle}
#     SET_SERVO SERVO=cut_servo WIDTH=0.0
#     G4 P{cutvar.servo_idle_time}
#     M118 Cutter closed
#     M400
#     G4 P0

# [gcode_macro CUTTER_OPEN]
# description: Set Servo in the open position
# gcode:
#     {% set cutvar = printer["gcode_macro _CUT_VAR"] %}
#     SET_SERVO SERVO=cut_servo ANGLE={cutvar.servo_open_angle}
#     SET_SERVO SERVO=cut_servo WIDTH=0.0
#     G4 P{cutvar.servo_idle_time}
#     M118 Cutter open
#     M400
#     G4 P0

[gcode_macro CUTTER_CLOSE]
description: Set Servo to 150 Degrees (Cutter Closed)
gcode:
    SET_SERVO SERVO=cut_servo ANGLE=120
    G4 P1000  ; Pause for 1 second (1000 milliseconds)
    M118 Cutter Closed
    M400
    G4 P0

[gcode_macro CUTTER_OPEN]
description: Set Servo to 10 Degrees
gcode:
    SET_SERVO SERVO=cut_servo ANGLE=15
    G4 P1000
    M118 Cutter Open
    M400
    G4 P0

[gcode_macro CUTTER_BLOCK]
description: Set Servo in the blocked position
gcode:
    {% set cutvar = printer["gcode_macro _CUT_VAR"] %}
    SET_SERVO SERVO=cut_servo ANGLE={cutvar.servo_blocked_angle}
    SET_SERVO SERVO=cut_servo WIDTH=0.0
    G4 P{cutvar.servo_idle_time}
    M118 Cutter blocked
    M400
    G4 P0

[gcode_macro CUTTER_Action]
description: Set Servo in the close position. Doesn't work properly yet.
gcode:
    {% set cutvar = printer["gcode_macro _CUT_VAR"] %}

    CUTTER_CLOSE
    MMU_TEST_MOVE MOVE={cutvar.feed_length + cutvar.cut_length}   #Rough estimation of the parking position to the outout of the encoder + the cut length
    _MMU_STEP_SET_FILAMENT STATE=1 #Makes MMU think it has filament loaded
    {% for i in range(cutvar.cut_amount) %}
      CUTTER_OPEN
      CUTTER_CLOSE
    {% endfor %}
    MMU_TEST_MOVE MOVE=-1
    CUTTER_OPEN
    MMU_EJECT
    M400
    G4 P0